local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Các NPC và quái vật
local npcSea2 = workspace:WaitForChild("QuestGiver_Sea2")  -- NPC cấp nhiệm vụ Sea 2
local npcSea3 = workspace:WaitForChild("QuestGiver_Sea3")  -- NPC cấp nhiệm vụ Sea 3
local monster = workspace:WaitForChild("Monster_Sea2")  -- Quái vật Sea 2
local nextIsland = workspace:WaitForChild("Sea3Island")  -- Đảo Sea 3
local haki = player:WaitForChild("Haki")  -- Giả sử có một Haki thuộc tính

-- Các tham số level và điều kiện
local maxLevel = 2600
local currentLevel = player.leaderstats.Level.Value  -- Giả sử level lưu trong leaderstats

-- Delay ngẫu nhiên (Anti-ban)
local function randomDelay(min, max)
    local delayTime = math.random(min, max)
    wait(delayTime)
end

-- Kiểm tra xem đã đạt đủ level chưa
local function isLevelMax()
    return currentLevel >= maxLevel
end

-- Bật Haki nếu chưa mua
local function enableHaki()
    if not haki.Value then  -- Giả sử Haki là một thuộc tính boolean
        haki.Value = true
        print("Haki đã được bật!")
    end
end

-- Di chuyển đến quái vật bằng tween
local function moveToMonster()
    local targetPosition = monster.Position
    local tweenInfo = TweenInfo.new(5, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 1, false, 0)
    local tweenGoal = {Position = targetPosition}
    local tween = TweenService:Create(rootPart, tweenInfo, tweenGoal)
    tween:Play()
end

-- Auto đánh quái vật
local function attackMonster()
    local distance = (monster.Position - rootPart.Position).magnitude
    if distance <= 10 then  -- Khoảng cách tấn công
        local monsterHumanoid = monster:FindFirstChildOfClass("Humanoid")
        if monsterHumanoid and monsterHumanoid.Health > 0 then
            monsterHumanoid:TakeDamage(10)  -- Gây sát thương cho quái vật
            print("Quái vật bị tấn công!")
        end
    end
end

-- Nhận nhiệm vụ từ NPC ở Sea 2
local function acceptQuestSea2()
    local npcDialog = npcSea2:FindFirstChild("Dialog")
    if npcDialog then
        local dialogChoice = npcDialog:FindFirstChild("Choice")
        if dialogChoice then
            dialogChoice:Click()
            print("Nhiệm vụ ở Sea 2 đã được nhận!")
        end
    end
end

-- Nhận nhiệm vụ từ NPC ở Sea 3
local function acceptQuestSea3()
    local npcDialog = npcSea3:FindFirstChild("Dialog")
    if npcDialog then
        local dialogChoice = npcDialog:FindFirstChild("Choice")
        if dialogChoice then
            dialogChoice:Click()
            print("Nhiệm vụ ở Sea 3 đã được nhận!")
        end
    end
end

-- Chuyển sang Sea 3 khi hoàn thành nhiệm vụ
local function goToNextIsland()
    if isLevelMax() then
        humanoid:MoveTo(nextIsland.Position)
        print("Chuyển sang Sea 3!")
    else
        print("Chưa đủ level để chuyển đảo!")
    end
end

-- Auto làm nhiệm vụ và đánh quái
local function autoQuestAndGrind()
    -- Di chuyển đến quái vật và đánh
    moveToMonster()
    randomDelay(3, 5)  -- Delay giữa các hành động
    attackMonster()

    -- Bật Haki nếu chưa bật
    enableHaki()
    randomDelay(2, 4)

    -- Nhận nhiệm vụ từ NPC nếu chưa có
    if not isLevelMax() then
        acceptQuestSea2()
    else
        acceptQuestSea3()
    end
    randomDelay(3, 5)

    -- Chuyển sang đảo tiếp theo nếu hoàn thành nhiệm vụ
    goToNextIsland()
end

-- Random hóa hành động để tránh bị phát hiện là gian lận
local function performActionRandomly()
    local actionType = math.random(1, 3)
    if actionType == 1 then
        moveToMonster()
        randomDelay(2, 4)
    elseif actionType == 2 then
        attackMonster()
        randomDelay(1, 3)
    elseif actionType == 3 then
        enableHaki()
        randomDelay(2, 5)
    end
end

-- Coroutine để thực hiện các tác vụ không đồng bộ
local function performTaskWithDelay()
    local task = coroutine.create(function()
        while true do
            if not isLevelMax() then
                performActionRandomly()  -- Tiến hành làm nhiệm vụ và tấn công quái
                wait(5)  -- Delay giữa các lần thực hiện hành động
            else
                print("Đã hoàn thành nhiệm vụ, chuẩn bị chuyển sang Sea 3!")
                break
            end
        end
    end)
    coroutine.resume(task)
end

-- Thêm TextLabel để hiển thị tên tác giả (bảodz)
local function addAuthorName()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = player.PlayerGui
    
    local authorLabel = Instance.new("TextLabel")
    authorLabel.Parent = screenGui
    authorLabel.Text = "Tác giả: bảodz"
    authorLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    authorLabel.TextSize = 18
    authorLabel.Position = UDim2.new(1, -200, 0, 10)  -- Vị trí ở góc phải trên màn hình
    authorLabel.AnchorPoint = Vector2.new(1, 0)  -- Gắn vào góc phải
    authorLabel.BackgroundTransparency = 1
    authorLabel.TextStrokeTransparency = 0.8
end

-- Gọi hàm tự động khi nhấn phím "F"
local userInputService = game:GetService("UserInputService")
userInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.F then
        performTaskWithDelay()
    end
end)

-- Thêm tên tác giả vào màn hình
addAuthorName()

-- Bắt đầu tự động làm nhiệm vụ và đánh quái
performTaskWithDelay()
